'use client'
// Datadrivna komiska texter f√∂r varje planet och score-niv√•
export const funnyPlanetTexts: Record<string, Record<string, string>> = {
  sun: {
    '90': 'Sol: Som den soldyrkare du √§r planerar du alltid n√§sta semester, medan din dejt pl√∂tsligt f√∂rsvinner f√∂r att starta ett spontant beachparty med lokalbefolkningen. Ni √§r b√•da lika dramatiska som Lejonet p√• en karaoke-kv√§ll. Och √§nd√•, n√§r ni m√∂ts, blir det eldigt och alla undrar om ni √§r med i en dokus√•pa.',
    '80': 'Sol: Du f√∂rs√∂ker √∂vertyga din dejt om att V√§duren √§r b√§st, men hen har redan bokat biljett till Oxens ostprovning. Ni har lika mycket energi som en Skorpion p√• speed, men ibland k√§nns det som att ni √§r med i en svensk version av "Love Island".',
    '70': 'Sol: Som Tvillingarna p√• midsommar ‚Äì du vill dansa sm√• grodorna, din dejt vill diskutera existentialism med en Jungfru. Ni √§r som tv√• stj√§rntecken i ett escape room, och ingen hittar ut.',
    '0': 'Sol: Du √§r Lejonet som vill ha all uppm√§rksamhet, men din dejt √§r Fiskarna som hellre pratar med bartendern. Ni √§r som Greta Thunberg och Elon Musk p√• en klimatkonferens ‚Äì olika v√§rldar, men √§nd√• fascinerande.'
  },
  moon: {
    '90': 'M√•ne: Ni har k√§nslor djupare √§n Kr√§ftans kylsk√•p efter midsommar. Din dejt skriver poesi om er relation och du gr√•ter till "Sagan om ringen". Ni √§r som tv√• Jungfrur som f√∂rs√∂ker organisera en √∂verraskningsfest ‚Äì det slutar med att ni b√•da st√§dar.',
    '80': 'M√•ne: Du √§r Oxen som vill mysa, din dejt √§r Vattumannen som vill diskutera rymden. Ni √§r som Phoebe och Joey i Friends, fast med mer sill och mindre gitarr. Ingen f√∂rst√•r er, men ni har kul.',
    '70': 'M√•ne: Som Skorpionen p√• en blinddate ‚Äì du analyserar varje ord, din dejt googlar "hur man flyr en kr√§fta". Ni √§r som Edward och Bella i Twilight, fast med mer regn och mindre vampyrer.',
    '0': 'M√•ne: Du √§r V√•gen som vill ha harmoni, din dejt √§r Stenbocken som vill ha Excel-ark. Ni √§r som en svensk midsommar ‚Äì k√§nslor, regn och n√•gon gr√•ter √∂ver potatissalladen.'
  },
  venusMars: {
    '90': 'Venus/Mars: Ni har mer passion √§n en Oxen p√• chokladprovning. Din dejt √§r Lejonet som vill ha drama, du √§r V√§duren som vill ha action. Tillsammans √§r ni som Brad Pitt och Angelina Jolie, fast med mer IKEA-m√∂bler och mindre paparazzi.',
    '80': 'Venus/Mars: Du √§r V√•gen som vill ha romantik, din dejt √§r Skorpionen som vill ha mystik. Ni √§r som Barbie och Ken, fast Ken har existentialistisk kris och Barbie har startat podd om astrologi.',
    '70': 'Venus/Mars: Som Shrek och Fiona ‚Äì du √§r gr√∂n av avund, din dejt √§r gr√∂n av passion. Ni √§r som Taylor Swift och en break-up l√•t, fast p√• svenska.',
    '0': 'Venus/Mars: Du √§r Jungfrun som vill ha ordning, din dejt √§r Fiskarna som vill ha kaos. Ni √§r som tv√• stj√§rntecken p√• Tinder ‚Äì matchar ibland, men oftast swipear ni vidare.'
  },
  mercury: {
    '90': 'Merkurius: Ni kommunicerar b√§ttre √§n Tvillingarna p√• Twitter. Din dejt √§r Vattumannen som skickar memes, du √§r Oxen som svarar med GIFs. Tillsammans √§r ni som PewDiePie och Minecraft ‚Äì ov√§ntat beroendeframkallande och ingen fattar varf√∂r.',
    '80': 'Merkurius: Du √§r Lejonet som vill prata om dig sj√§lv, din dejt √§r Jungfrun som vill prata om dig. Ni √§r som Ed Sheeran och en gitarr, fast med mer snack om v√§dret och mindre s√•ng.',
    '70': 'Merkurius: Som Lady Gaga och Madonna ‚Äì du √§r dramatisk, din dejt √§r √§nnu mer dramatisk. Ni √§r som tv√• stj√§rntecken i en podd om astrologi, och ingen lyssnar.',
    '0': 'Merkurius: Du √§r Stenbocken som vill ha struktur, din dejt √§r Fiskarna som vill ha kaos. Ni √§r som Einstein och en astrolog ‚Äì logik m√∂ter magi och ingen f√∂rst√•r n√•gonting.'
  },
  jupiter: {
    '90': 'Jupiter: Ni har st√∂rre visioner √§n Skytten p√• en backpacker-resa. Din dejt √§r Lejonet som vill starta f√∂retag, du √§r V√•gen som vill starta bokcirkel. Tillsammans √§r ni som Elon Musk och rymden ‚Äì stora planer, men ingen vet vad som h√§nder.',
    '80': 'Jupiter: Du √§r Oxen som vill ha trygghet, din dejt √§r Vattumannen som vill ha √§ventyr. Ni √§r som Oprah och giveaways ‚Äì alla f√•r n√•got, ingen vet vad. Och n√•gon f√•r en get.',
    '70': 'Jupiter: Som Zlatan och en mikrofon ‚Äì du pratar, din dejt appl√•derar. Ni √§r som tv√• stj√§rntecken p√• en reality-show, och ingen vill bli utr√∂stad.',
    '0': 'Jupiter: Du √§r Skorpionen som vill ha kontroll, din dejt √§r Fiskarna som vill ha frihet. Ni √§r som en svensk reality-show ‚Äì s√• d√•ligt att det blir bra, och alla vill se mer.'
  },
  saturn: {
    '90': 'Saturnus: Ni √§r stabila som Stenbocken p√• ett bokslut. Din dejt √§r Jungfrun som har med sig extranyckel till cykeln, du √§r Oxen som har med sig extranyckel till hj√§rtat. Tillsammans √§r ni som IKEA och manualer ‚Äì stabilt, men n√•gon tappar skruvarna.',
    '80': 'Saturnus: Du √§r V√•gen som vill ha balans, din dejt √§r Lejonet som vill ha fest. Ni √§r som Morgan Freeman och visdom ‚Äì tryggt och l√•ngsamt, men ibland gl√∂mmer ni varf√∂r ni tr√§ffades.',
    '70': 'Saturnus: Som en svensk chef ‚Äì du vill ha ordning, din dejt vill ha fika. Ni √§r som tv√• stj√§rntecken p√• ett personalm√∂te, och ingen vet vad som h√§nder.',
    '0': 'Saturnus: Du √§r Fiskarna som gl√∂mmer bort tiden, din dejt √§r V√§duren som gl√∂mmer bort dig. Ni √§r som en gammal Volvo ‚Äì g√•r alltid, men ingen vet varf√∂r, och n√•gon har gl√∂mt besiktningen.'
  }
}

// Funktion f√∂r att h√§mta text baserat p√• planet och score
import stjarnteckenPlanetMatchningar from '@/lib/stjarntecken_planet_matchningar.json'
// Typ f√∂r nya JSON-strukturen
type StjarnteckenPlanetMatchningar = {
  [planet: string]: {
    [signCombo: string]: string
  }
}

const stjarnteckenPlanetMatchningarTyped: StjarnteckenPlanetMatchningar = stjarnteckenPlanetMatchningar as StjarnteckenPlanetMatchningar

// Funktion f√∂r att h√§mta text baserat p√• planet och b√•da stj√§rntecken
export function getFunnyPlanetText(planet: string, _score: number, sign1: string, sign2: string): string {
  // Map English planet keys to Swedish JSON keys
  const planetKeyMap: Record<string, string> = {
    sun: "Sol",
    moon: "M√•ne",
    mercury: "Merkurius",
    venus: "Venus",
    mars: "Mars",
    jupiter: "Jupiter",
    saturn: "Saturnus",
    uranus: "Uranus",
    neptune: "Neptunus",
    pluto: "Pluto"
  };
  const planetJsonKey = planetKeyMap[planet] || planet;
  const comboKey = `${sign1}_${sign2}`;
  const planetTexts = stjarnteckenPlanetMatchningarTyped[planetJsonKey];
  if (!planetTexts) return 'Ingen analys finns f√∂r denna planet.';
  return planetTexts[comboKey] || 'Ingen analys finns f√∂r denna kombination √§nnu.';
}

import { motion } from 'framer-motion'
import { Star, Sun, Moon, Heart, MessageCircle, Globe, Shield } from 'lucide-react'
import { getBirthData } from '@/lib/birth-data'

interface DetailedResultProps {
  date1: string
  date2: string
  result: {
    total: number
    breakdown: {
      sun: number
      moon: number
      venusMars: number
      mercury: number
      jupiter: number
      saturn: number
    }
    summary: string
  }
}

const planetIcons = {
  sun: null,
  moon: null,
  venusMars: null,
  mercury: null,
  jupiter: null,
  saturn: null
}

const planetNames = {
  sun: 'Sol',
  moon: 'M√•ne',
  venusMars: 'Venus-Mars',
  mercury: 'Merkurius',
  jupiter: 'Jupiter',
  saturn: 'Saturnus'
}

const planetDescriptions = {
  sun: 'K√§rna och vilja',
  moon: 'K√§nslor och behov',
  venusMars: 'Romantik och passion',
  mercury: 'Kommunikation',
  jupiter: 'V√§rderingar och expansion',
  saturn: 'Stabilitet och ansvar'
}

export default function DetailedResult({ date1, date2, result }: DetailedResultProps) {
  const birthData1 = getBirthData(date1)
  const birthData2 = getBirthData(date2)
  // H√§mta huvudanalys fr√•n Sol-planetens text och ta bort prefixet 'Sol:' om det finns
  let mainFunnyText = getFunnyPlanetText('sun', result.breakdown.sun, birthData1.sun, birthData2.sun)
  if (mainFunnyText.startsWith('Sol:')) {
    mainFunnyText = mainFunnyText.replace(/^Sol:\s*/, '')
  }
  return (
    <div className="flex flex-col items-center min-h-[140px] w-[340px] mx-auto p-6 rounded-xl shadow relative border border-gray-300" style={{ 
      backgroundColor: 'rgba(240, 240, 240, 0.9)',
      backdropFilter: 'blur(2px)'
    }}>
      {/* Ingen emoji, bara ren text */}
      <p className="text-lg font-medium text-center" style={{ color: 'rgb(var(--primary-midnight-blue))' }}>
        {mainFunnyText}
      </p>

      {/* Planet Breakdown (skip Sol, already shown above) */}
      <div className="space-y-4">
        {/* Visa bara planeter med score > 0 och hoppa √∂ver 'sun' */}
        {Object.entries(result.breakdown)
          .filter(([planet, score]) => score > 0 && planet !== 'sun')
          .map(([planet, score]) => {
            // Use zodiac animal emoji for planet name
            let emoji = '';
            if (planet === 'moon') emoji = '';
            else if (planet === 'sun') emoji = '‚òÄÔ∏è';
            else if (planet === 'venusMars') emoji = 'üíò';
            else if (planet === 'mercury') emoji = 'ü¶ã';
            else if (planet === 'jupiter') emoji = 'ü¶Å';
            else if (planet === 'saturn') emoji = 'üê¢';
            const name = planetNames[planet as keyof typeof planetNames];
            const description = planetDescriptions[planet as keyof typeof planetDescriptions];
            const funnyText = getFunnyPlanetText(planet, score, birthData1.sun, birthData2.sun);
            return (
              <motion.div
                key={planet}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                className="rounded-lg p-4 relative border border-gray-300" style={{ 
                  backgroundColor: 'rgba(240, 240, 240, 0.9)',
                  backdropFilter: 'blur(2px)'
                }}
              >
                <span className="absolute top-1 right-2 text-xl select-none">‚ú®</span>
                <span className="absolute bottom-1 left-2 text-xl select-none">üßô‚Äç‚ôÇÔ∏è</span>
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center gap-2">
                    {emoji && <span className="text-2xl">{emoji}</span>}
                    <span className="font-medium" style={{ color: 'rgb(var(--primary-midnight-blue))' }}>{name}</span>
                    <span className="ml-1 text-lg">üåü</span>
                  </div>
                  <span className="text-lg font-bold" style={{ color: 'rgb(var(--primary-midnight-blue))' }}>{score}% <span className="ml-1">ü™Ñ</span></span>
                </div>
                <p className="text-sm mb-2" style={{ color: 'rgb(var(--primary-midnight-blue))' }}>{description} <span className="ml-1">üîÆ</span></p>
                <p className="text-sm mb-2 font-bold" style={{ color: 'rgb(var(--primary-midnight-blue))' }}>{funnyText} <span className="ml-1">‚ú®</span></p>
                {/* Progress bar */}
                <div className="w-full bg-gray-300 rounded-full h-2">
                  <motion.div
                    initial={{ width: 0 }}
                    animate={{ width: `${score}%` }}
                    transition={{ duration: 1, delay: 0.2 }}
                    className="h-2 rounded-full"
                    style={{ backgroundColor: 'rgb(var(--accent-gold))' }}
                  />
                </div>
              </motion.div>
            );
          })}
      </div>
    </div>
  )
}

function getZodiacEmoji(sign: string): string {
  const emojis: Record<string, string> = {
    'V√§duren': '‚ôà',
    'Oxen': '‚ôâ',
    'Tvillingarna': '‚ôä',
    'Kr√§ftan': '‚ôã',
    'Lejonet': '‚ôå',
    'Jungfrun': '‚ôç',
    'V√•gen': '‚ôé',
    'Skorpionen': '‚ôè',
    'Skytten': '‚ôê',
    'Stenbocken': '‚ôë',
    'Vattumannen': '‚ôí',
    'Fiskarna': '‚ôì'
  }
  return emojis[sign] || '‚≠ê'
}